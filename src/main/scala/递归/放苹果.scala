package 递归


/**
 * 把M个同样的苹果放在N个同样的盘子里，允许有的盘子空着不放，问共有多少种不同的放法？5，1，1 和 1，1，5 是同一种放法
 *
 *
 * 设m个苹果放在n个盘子里的放法总数是 f(m,n)
 * 当 n > m 时，f(m,n)= f(m,m)
 * 当 n <= m 时： 总放法 = 有盘子为空的放法 + 没盘子为空的放法(先在每个盘子里放一个苹果，剩下m-n 个苹果放在n个盘子里)
 * f(m,n) = f(m,n-1) + f(m-n,n)
 *
 * 边界条件：
 * f(0,n) = 1
 * f(m,n <=0) = 0
 *
 *
 * 每个盘子摆放一个，相当于所有盘子都没摆放，剩下的苹果如果小于盘子，则减少盘子数量，最终摆放下来最后一个盘子有最多的苹果，同时所有摆放苹果的盘子是阶梯状的，没有重复结果
 *
 *
 *
 *
 */

object 放苹果 {

  def main(args: Array[String]): Unit = {

    println(f(7,3))

  }

  def f(n:Int,m:Int):Int={
    if (m > n) {
      return f(n, n)
    }
    if(n == 0){
      return 1;
    }
    if (m <= 0){
      return 0
    }
    f(n,m-1) + f(n-m,m)
  }









}
